name: HTTP
version: 4000.2.18
id: HTTP-4000.2.18-6e37361cf40f516d2dde0cbe0df699ff
license: BSD3
copyright:
maintainer: Ganesh Sittampalam <ganesh@earth.li>
stability:
homepage: https://github.com/haskell/HTTP
package-url:
synopsis: A library for client-side HTTP
description: The HTTP package supports client-side web programming in Haskell. It lets you set up
             HTTP connections, transmitting requests and processing the responses coming back, all
             from within the comforts of Haskell. It's dependent on the network package to operate,
             but other than that, the implementation is all written in Haskell.
             .
             A basic API for issuing single HTTP requests + receiving responses is provided. On top
             of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
             it taking care of handling the management of persistent connections, proxies,
             state (cookies) and authentication credentials required to handle multi-step
             interactions with a web server.
             .
             The representation of the bytes flowing across is extensible via the use of a type class,
             letting you pick the representation of requests and responses that best fits your use.
             Some pre-packaged, common instances are provided for you (@ByteString@, @String@).
             .
             Here's an example use:
             .
             >
             >    do
             >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
             >              -- fetch document and return it (as a 'String'.)
             >      fmap (take 100) (getResponseBody rsp)
             >
             >    do
             >      (_, rsp)
             >         <- Network.Browser.browse $ do
             >               setAllowRedirects True -- handle HTTP redirects
             >               request $ getRequest "http://www.haskell.org/"
             >      return (take 100 (rspBody rsp))
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules: Network.BufferType Network.Stream
                 Network.StreamDebugger Network.StreamSocket Network.TCP
                 Network.HTTP Network.HTTP.Headers Network.HTTP.Base
                 Network.HTTP.Stream Network.HTTP.Auth Network.HTTP.Cookie
                 Network.HTTP.Proxy Network.HTTP.HandleStream Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
trusted: False
import-dirs: /Users/Erwan/projects/haskell/mangaServer/.cabal-sandbox/lib/x86_64-osx-ghc-7.6.3/HTTP-4000.2.18
library-dirs: /Users/Erwan/projects/haskell/mangaServer/.cabal-sandbox/lib/x86_64-osx-ghc-7.6.3/HTTP-4000.2.18
hs-libraries: HSHTTP-4000.2.18
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: array-0.4.0.1-3b78425c10ff2dad7acf7e8c8ae014c3
         base-4.6.0.1-6c351d70a24d3e96f315cba68f3acf57
         bytestring-0.10.4.0-ed2cdaee92d93aa8dd61a235896c69e3
         mtl-2.2.1-4df759af62c26d68b5a25bb704fe4d3f
         network-2.6.0.2-1a0f07ba74ac02bd9604cb1305c7173d
         network-uri-2.6.0.1-c5695f094c03349e211dc2dd67bff144
         old-time-1.1.0.1-4096e5c0be1f1ff8883115216d1bc5d1
         parsec-3.1.7-17242e1cdfdd1b84c6c8e8346e97f4e9
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /Users/Erwan/projects/haskell/mangaServer/.cabal-sandbox/share/doc/x86_64-osx-ghc-7.6.3/HTTP-4000.2.18/html/HTTP.haddock
haddock-html: /Users/Erwan/projects/haskell/mangaServer/.cabal-sandbox/share/doc/x86_64-osx-ghc-7.6.3/HTTP-4000.2.18/html
